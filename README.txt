Analysis of Connectivity of Wikipedia Articles
***ALERT: assign2.sh (complete programe Q1-Q11) takes a total time of 13 minutes to execute. (where q5 takes 8 mins)

CONTENTS OF THIS FILE
---------------------
 * Introduction
 * Pre-requisites
 * Running the program
      * Input, Executable and Output of each program
 * Contact Details


INTRODUCTION
------------
Hi!! This is the Assignment #2 submission of course CS685A: Data Mining.
This assignment is coded in python 3.6.5 and requires installation of pandas library.

* Folder contains 26 files and 2 folders in it.
	* 12 shell files
	* 11 py(python) files
	* 1 txt file (Readme)
	* 1 tex file (report.tex)
	* 1 pdf file (report.pdf)
	* 2 folder - wikispeedia_paths-and-graph (It contains 6 files which are inputs for the program) and 
		     images (It contains the images used in the report.tex file)


* After executing all the shell files (or assign2.sh file), 13 csv files will be generated as output and 1 csv file for internal execution of programs. 

PRE-REQUISITES
------------

* Python 3.6.5 or greater version
* Pandas library
	=> You can run the following command on the linux terminal to install pandas in your system:
		$ pip3 install pandas

* Networks library
	$ pip3 install networkx

* Program needs 5 input files for the execution. These files are inside the folder wikispeedia_paths-and-graph. 
  Names are as follows:
	* articles.tsv 
	* categories.tsv 
	* paths_finished.tsv 
	* paths_unfinished.tsv 
	* shortest-path-distance-matrix.txt


RUNNING THE PROGRAM
----------------

* Assignment contains 11 coding questions (Q1 to Q11). For each question there exists a python and shell 
  file for execution. 

* To execute the entire program at once: Execute assign2.sh file by following command in linux terminal:
	$ ./assign2.sh

***ALERT: assign2.sh takes a total time of 13 minutes to execute.

*** ALERT: Q1, Q2, Q3, Q4, Q5, Q6, Q7, Q8, Q9, Q10, and Q11 FILES ARE NEEDED TO BE EXECUTED IN THE ORDERED MANNER 
	   AS ONE REQUIRES THE OUTPUT OF OTHER AS INPUT.


INPUTS, EXECUTABLE, OUTPUTS OF EACH QUESTION'S PROGRAM
-------------------------------------------------------
-> To execute any of the program: $ ./script_file.sh 

Q1
---
Input File: articles.tsv
Executable: article-id.sh
Generated Output File: article-id.csv

Q2 
---
Input File: categories.tsv
Executable: category-id.sh
Generated Output File: category-id.csv

Q3
---
Input File: categories.tsv and article-id.csv (generated by Q1)
Executable: article-categories.sh
Generated Output File: article-categories.csv

Q4 
---
Input File: shortest-path-distance-matrix.txt
Executable: edges.sh
Generated Output File: edges.csv

Q5 
---
Input File: edges.csv (generated by Q4)
Executable: graph-components.sh
Generated Output File: graph-components.csv

Q6 
---
Input File: paths_finished.tsv
Executable: finished-paths.sh
Generated Output File: finished-paths-back.csv, finished-paths-no-back.csv and cleaned_path.csv
	
Q7 
---
Input File: finished-paths-back.csv, finished-paths-no-back.csv (both are generated by Q6)
Executable: percentage-paths.sh
Generated Output File: percentage-paths-back.csv and percentage-paths-no-back.csv

Q8 
---
Input File: cleaned_path.csv (generated by Q6), article-categories.csv (generated by Q3), 
	    article-id.csv (generated by Q1) 
Executable: category-paths.sh
Generated Output File: category-paths.csv

Q9 
---
Input File: category-id.csv (Q2), cleaned_path.csv (generated by Q6), article-categories.csv (generated by Q3),article-id.csv (generated by Q1) 
Executable: category-subtree-paths.sh
Generated Output File: category-subtree-paths.csv

Q10
----
Input File: category-id.csv (Q2), paths_unfinished.tsv, article-id.csv (Q1), article-categories.csv (Q3), cleaned_path.csv (generated by Q6)
Executable: category-pairs.sh
Generated Output File: category-pairs.csv

Q11
----
Input File: cleaned_path.csv (generated by Q6), finished-paths-no-back.csv, article-id.csv, article-categories.csv
Executable: category-ratios.sh
Generated Output File: category-ratios.csv
